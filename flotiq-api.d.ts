/**
 * This file was generated by flotiq-api-typegen command
 * Generated at: 2025-02-06T09:41:25.600Z
 */

import {
  DataLink,
  ApiRequest,
  BaseObject,
  SearchParams,
  HydratedSearchResponse,
  InternalMedia,
  InternalMediaHydrated,
  InternalMediaHydratedTwice,
  InternalPluginSettings,
  InternalPluginSettingsHydrated,
  InternalPluginSettingsHydratedTwice,
  InternalTag,
  InternalTagHydrated,
  InternalTagHydratedTwice,
  InternalWebhooks,
  InternalWebhooksHydrated,
  InternalWebhooksHydratedTwice,
} from "@flotiq/flotiq-api-sdk";

type StringWithAutocomplete<T> = T | (string & Record<never, never>);

declare module "@flotiq/flotiq-api-sdk" {
  export type AnySpaceCTD =
    | InternalMedia
    | InternalPluginSettings
    | InternalTag
    | InternalWebhooks
    | Blogpost
    | Po
    | Products
    | Test
    | TestQysrlfmi
    | Testok;

  export type AnySpaceCTDHydrated =
    | InternalMediaHydrated
    | InternalPluginSettingsHydrated
    | InternalTagHydrated
    | InternalWebhooksHydrated
    | BlogpostHydrated
    | PoHydrated
    | ProductsHydrated
    | TestHydrated
    | TestQysrlfmiHydrated
    | TestokHydrated;

  export type AnySpaceCTDHydratedTwice =
    | InternalMediaHydratedTwice
    | InternalPluginSettingsHydratedTwice
    | InternalTagHydratedTwice
    | InternalWebhooksHydratedTwice
    | BlogpostHydratedTwice
    | PoHydratedTwice
    | ProductsHydratedTwice
    | TestHydratedTwice
    | TestQysrlfmiHydratedTwice
    | TestokHydratedTwice;

  // #region blogpost

  export interface BlogpostBase extends BaseObject<"blogpost"> {
    title: string;

    /**
     * Slug can only have alphanumerical characters, - and _
     */
    slug: string;
    excerpt: string;
    content: any;
    headerImage?:
      | Array<DataLink>
      | Array<InternalMedia>
      | Array<InternalMediaHydrated>
      | Array<InternalMediaHydratedTwice>;
    ok?: string;
  }

  export interface Blogpost extends BlogpostBase {
    headerImage?: Array<DataLink>;
  }

  export interface BlogpostHydrated extends BlogpostBase {
    headerImage?: Array<InternalMedia>;
  }

  export interface BlogpostHydratedTwice extends BlogpostBase {
    headerImage?: Array<InternalMediaHydrated>;
  }

  export namespace Blogpost {
    export type FilterableFields = StringWithAutocomplete<
      | "title"
      | "slug"
      | "excerpt"
      | "content"
      | "headerImage"
      | "headerImage[*].type"
      | "headerImage[*].dataUrl"
      | "ok"
    >;
  }

  // #endregion

  // #region po

  export interface PoBase extends BaseObject<"po"> {
    /**
     * Manage drafts and control when content is published.
     */
    draft_public_mode?: boolean;
  }

  export interface Po extends PoBase {}

  export interface PoHydrated extends PoBase {}

  export interface PoHydratedTwice extends PoBase {}

  export namespace Po {
    export type FilterableFields = StringWithAutocomplete<"draft_public_mode">;
  }

  // #endregion

  // #region products

  export interface ProductsBase extends BaseObject<"products"> {
    title?: string;
    price?: number;
  }

  export interface Products extends ProductsBase {}

  export interface ProductsHydrated extends ProductsBase {}

  export interface ProductsHydratedTwice extends ProductsBase {}

  export namespace Products {
    export type FilterableFields = StringWithAutocomplete<"title" | "price">;
  }

  // #endregion

  // #region test

  export interface TestBase extends BaseObject<"test"> {
    ok?: string;
  }

  export interface Test extends TestBase {}

  export interface TestHydrated extends TestBase {}

  export interface TestHydratedTwice extends TestBase {}

  export namespace Test {
    export type FilterableFields = StringWithAutocomplete<"ok">;
  }

  // #endregion

  // #region test_qysrlfmi

  export interface TestQysrlfmiBase extends BaseObject<"test_qysrlfmi"> {
    title?: string;
  }

  export interface TestQysrlfmi extends TestQysrlfmiBase {}

  export interface TestQysrlfmiHydrated extends TestQysrlfmiBase {}

  export interface TestQysrlfmiHydratedTwice extends TestQysrlfmiBase {}

  export namespace TestQysrlfmi {
    export type FilterableFields = StringWithAutocomplete<"title">;
  }

  // #endregion

  // #region testok

  export interface TestokBase extends BaseObject<"testok"> {
    test?: string;
  }

  export interface Testok extends TestokBase {}

  export interface TestokHydrated extends TestokBase {}

  export interface TestokHydratedTwice extends TestokBase {}

  export namespace Testok {
    export type FilterableFields = StringWithAutocomplete<"test">;
  }

  // #endregion

  export interface FlotiqObjectAPI {
    _media: ApiRequest<
      InternalMedia,
      InternalMediaHydrated,
      InternalMediaHydratedTwice,
      InternalMedia.FilterableFields
    >;

    _plugin_settings: ApiRequest<
      InternalPluginSettings,
      InternalPluginSettingsHydrated,
      InternalPluginSettingsHydratedTwice,
      InternalPluginSettings.FilterableFields
    >;

    _tag: ApiRequest<
      InternalTag,
      InternalTagHydrated,
      InternalTagHydratedTwice,
      InternalTag.FilterableFields
    >;

    _webhooks: ApiRequest<
      InternalWebhooks,
      InternalWebhooksHydrated,
      InternalWebhooksHydratedTwice,
      InternalWebhooks.FilterableFields
    >;

    blogpost: ApiRequest<
      Blogpost,
      BlogpostHydrated,
      BlogpostHydratedTwice,
      Blogpost.FilterableFields
    >;

    po: ApiRequest<Po, PoHydrated, PoHydratedTwice, Po.FilterableFields>;

    products: ApiRequest<
      Products,
      ProductsHydrated,
      ProductsHydratedTwice,
      Products.FilterableFields
    >;

    test: ApiRequest<
      Test,
      TestHydrated,
      TestHydratedTwice,
      Test.FilterableFields
    >;

    test_qysrlfmi: ApiRequest<
      TestQysrlfmi,
      TestQysrlfmiHydrated,
      TestQysrlfmiHydratedTwice,
      TestQysrlfmi.FilterableFields
    >;

    testok: ApiRequest<
      Testok,
      TestokHydrated,
      TestokHydratedTwice,
      Testok.FilterableFields
    >;
  }

  export interface FlotiqSearchAPI {
    query<P extends SearchParams>(
      params?: P,
    ): Promise<
      HydratedSearchResponse<
        P,
        AnySpaceCTD,
        AnySpaceCTDHydrated,
        AnySpaceCTDHydratedTwice
      >
    >;
  }
}
